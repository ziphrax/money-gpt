version: '3.8'

volumes:
  mysql_data:
    driver: local
  keycloak-data-volume:
    driver: local
  mongo_data:
    driver: local
  redis_cache_data:
    driver: local

networks:
  default:
    driver: bridge


services:
  # money-service:
  #   build: ./money-service
  #   restart: always
  #   ports:
  #     - 5000:3000
  #   environment:
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     REDIS_PASSWORD: $REDIS_PASSWORD
  #     OPENAI_API_KEY: $OPENAI_API_KEY
  #   depends_on:
  #     - mongo
  #     - mysql
  #     - keycloak
  #     - kafka
  #     - redis

  # money-app:
  #   build: ./money-app
  #   restart: always
  #   ports:
  #     - 3000:80
  #   depends_on:
  #     - money-service
  #     - keycloak

  mongo:
    image: mongo:6.0.5
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - mongo_data:/data/db

  mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    restart: always
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: $DB_DATABASE
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      KEYCLOAK_USER: $KEYCLOAK_USER
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      KEYCLOAK_ADMIN: $KEYCLOAK_ADMIN
      KEYCLOAK_ADMIN_PASSWORD: $KEYCLOAK_ADMIN_PASSWORD
    volumes:
    - keycloak-data-volume:/var/lib/keycloak/data
    ports:
      - 8080:8080
    depends_on:
      - mysql
    command: start-dev

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    restart: unless-stopped
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka
    restart: always
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    volumes:
      - redis_cache_data:/data

  wiremock:
    image: rodolpheche/wiremock
    ports:
      - 8081:8080
    volumes:
      - ./wiremock:/home/wiremock